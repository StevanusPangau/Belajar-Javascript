# PENGENALAN DOM
- Ketika sebuah website di load oleh Browser, maka Browser akan membuat Document Object Model untuk halaman website tersebut
- DOM dibuat dalam bentuk tree / pohon yang tiap cabang nya berisikan object dari jenis elemen HTML
- JavaScript memiliki kemampuan untuk memanipulasi DOM, artinya dengan JavaScript, kita bisa mengakses tiap object di DOM bahkan memanipulasi object nya

# DOM DAN JAVASCRIPT
- DOM bukanlah fitur atau bahasa pemrograman, DOM sebenarnya hanyalah representasi Object dari Struktur halaman web
- DOM sendiri sebenarnya bukanlah bagian dari bahasa pemrograman JavaScript, melainkan bagian dari Web API
- DOM sendiri di desain secara agnostik, artinya sebenarnya bisa digunakan menggunakan bahasa pemrograman apapun, karena memang untuk membuat Web, kita tidak hanya bisa menggunakan bahasa pemrograman JavaScript

# TIPE DATA
- Document        Merupakan representasi dari halaman web
- Node            Merupakan base class untuk semua tipe data di DOM, seperti Document, Element, dan Attr
- Element         Merupakan representasi object element di halaman web, misal head, body, form, input, dan lain-lain
- NodeList        Merupakan array/collection yang berisikan Node
- Attr            Atau attribute, merupakan representasi object attribute dalam element
- NamedNodeMap    Merupakan collection yang berisikan Attr dalam bentuk Map

# Document
- Document merupakan representasi object dari halaman web
- Dalam satu halaman web, terdapat satu document, dan kita tidak perlu membuatnya secara manual, karena otomatis akan ada di browser
- Untuk mengakses Document, kita bisa gunakan object document
- https://developer.mozilla.org/en-US/docs/Web/API/Document 

# NODE
- Node adalah base class dari Document, Element dan Attr
- Artinya semua fitur yang dimiliki di Node dimiliki diturunannya
- Node dalam DOM itu bentuknya adalah Tree (pohon), artinya dengan Node, kita bisa melihat Parent (node diatas nya), Children (node dibawahnya), Sibling (node disebelahnya)
- https://developer.mozilla.org/en-US/docs/Web/API/Node 

# NODE PROPERTY
- Node memiliki banyak sekali property
- Property di Node banyak berisi informasi reference ke Node lain nya, seperti ke node parent nya, node children nya atau node sebelahnya
- https://developer.mozilla.org/en-US/docs/Web/API/Node#properties 

# NODE METHOD
- Node memiliki banyak sekali method
- Method di Node bisa digunakan untuk memanipulasi data Node di dalam Node tersebut, misal menambah/menghapus Node children
- https://developer.mozilla.org/en-US/docs/Web/API/Node#properties 

# ELEMENT
- Element merupakan Node yang berbentuk element, biasanya adalah element HTML, misal <html>, <head>, <body>, <div>, <table>, dan lain-lain
- https://developer.mozilla.org/en-US/docs/Web/API/Element 

# ELEMENT PROPERTY
- Element memiliki banyak sekali property
- Dan karena Element adalah turunan dari Node, semua property Node pun bisa digunakan di Element
- https://developer.mozilla.org/en-US/docs/Web/API/Element#properties 

# ELEMENT METHOD
- Element memiliki banyak sekali method
- Dan karena Element adalah turunan dari Node, semua method Node pun bisa digunakan di Element
- https://developer.mozilla.org/en-US/docs/Web/API/Element#methods 

# MEMBUAT ELEMENT
- Sebelumnya kita hanya mengambil element menggunakan id, artinya kita perlu buat dulu element nya di HTML
- Kita juga bisa membuat object element baru, dan menambahkannya ke halaman web
- Kita bisa menggunakan method createElement(tag) pada Document
- https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement 
